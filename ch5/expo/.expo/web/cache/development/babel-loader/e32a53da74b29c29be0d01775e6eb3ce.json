{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport styles from \"./AppStyles\";\nimport Amplify, { API, graphqlOperation } from 'aws-amplify';\nimport { createTodo } from \"./src/graphql/mutations\";\nimport { listTodos } from \"./src/graphql/queries\";\nimport awsExports from \"./aws-exports\";\nAmplify.configure(awsExports);\nvar initialState = {\n  name: '',\n  description: ''\n};\n\nvar App = function App() {\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      formState = _useState2[0],\n      setFormState = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      todos = _useState4[0],\n      setTodos = _useState4[1];\n\n  useEffect(function () {\n    fetchTodos();\n  }, []);\n\n  var setInput = function setInput(key, value) {\n    setFormState(_objectSpread(_objectSpread({}, formState), {}, _defineProperty({}, key, value)));\n  };\n\n  var fetchTodos = function fetchTodos() {\n    var todoData, _todos;\n\n    return _regeneratorRuntime.async(function fetchTodos$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(listTodos)));\n\n          case 3:\n            todoData = _context.sent;\n            _todos = todoData.data.listTodos.items;\n            setTodos(_todos);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('error fetching todos');\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var addTodo = function addTodo() {\n    var todo;\n    return _regeneratorRuntime.async(function addTodo$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n\n            if (!(!formState.name || !formState.description)) {\n              _context2.next = 3;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 3:\n            todo = _objectSpread({}, formState);\n            setTodos([].concat(_toConsumableArray(todos), [todo]));\n            setFormState(initialState);\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createTodo, {\n              input: todo\n            })));\n\n          case 8:\n            _context2.next = 13;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log('error creating todo:', _context2.t0);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(val) {\n      return setInput('name', val);\n    },\n    style: styles.input,\n    value: formState.name,\n    placeholder: \"Name\"\n  }), React.createElement(TextInput, {\n    onChangeText: function onChangeText(val) {\n      return setInput('description', val);\n    },\n    style: styles.input,\n    value: formState.description,\n    placeholder: \"Description\"\n  }), React.createElement(Button, {\n    title: \"Create Todo\",\n    onPress: addTodo\n  }), todos.map(function (todo, index) {\n    return React.createElement(View, {\n      key: todo.id ? todo.id : index,\n      style: styles.todo\n    }, React.createElement(Text, {\n      style: styles.todoName\n    }, todo.name), React.createElement(Text, null, todo.description));\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/adventvr/Workspaces/aws-amplify-hands-on/ch3/expo/App.tsx"],"names":["React","useEffect","useState","styles","Amplify","API","graphqlOperation","createTodo","listTodos","awsExports","configure","initialState","name","description","App","formState","setFormState","todos","setTodos","fetchTodos","setInput","key","value","graphql","todoData","data","items","console","log","addTodo","todo","input","container","val","map","index","id","todoName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, SetStateAction } from 'react';\n\nimport { View, Text, TextInput, Button } from 'react-native';\n\nimport styles from './AppStyles';\nimport Amplify, { API, graphqlOperation } from 'aws-amplify';\nimport { createTodo } from './src/graphql/mutations';\nimport { listTodos } from './src/graphql/queries';\n\nimport awsExports from \"./aws-exports\";\nAmplify.configure(awsExports);\n\nconst initialState = { name: '', description: '' }\n\nconst App = () => {\n  const [formState, setFormState] = useState(initialState);\n  const [todos, setTodos] = useState<any[]>([]);\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const setInput = (key: any, value: any):any => {\n    setFormState({ ...formState, [key]: value });\n  }\n\n  const fetchTodos = async (): Promise<any> => {\n    try {\n      const todoData:any = await API.graphql(graphqlOperation(listTodos));\n      const todos:any = todoData.data.listTodos.items;\n      setTodos(todos);\n    } catch (err) { \n      console.log('error fetching todos');\n    }\n  }\n\n  const addTodo = async (): Promise<any> => {\n    try {\n      if (!formState.name || !formState.description) return;\n      const todo = { ...formState };\n      setTodos([...todos, todo] as SetStateAction<any[]>);\n      setFormState(initialState);\n      await API.graphql(graphqlOperation(createTodo, {input: todo}));\n    } catch (err) {\n      console.log('error creating todo:', err);\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        onChangeText={val => setInput('name', val)}\n        style={styles.input}\n        value={formState.name} \n        placeholder=\"Name\"\n      />\n      <TextInput\n        onChangeText={val => setInput('description', val)}\n        style={styles.input}\n        value={formState.description}\n        placeholder=\"Description\"\n      />\n      <Button title=\"Create Todo\" onPress={addTodo} />\n      {\n        todos.map((todo, index) => (\n          <View key={todo.id ? todo.id : index} style={styles.todo}>\n            <Text style={styles.todoName}>{todo.name}</Text>\n            <Text>{todo.description}</Text>\n          </View>\n        ))\n      }\n    </View>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}